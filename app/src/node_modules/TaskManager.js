/**
 * @author : Mario Juez (mario@mjuez.com)
 *
 * @license: GPL v3
 *     This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

'use strict';

const Task = require('Task');
const EventEmitter = require('events');
let instance = null;

/**
 * TaskManager.js (Singleton).
 */
class TaskManager extends EventEmitter {

    constructor() {
        if (!instance) {
            super();
            this.numTasks = 0;
            this.nextId = [0, 0];
            this.tasks = [{}, {}];
            instance = this;
        }
        return instance;
    }

    addTask(task) {
        if (task instanceof Task) {
            this.tasks[this.nextId] = task;
            task.id = this.nextId;
            this._bindEventListeners(task);
            this.numTasks += 1;
            this.nextId += 1;
            this.emit("change");
            return true;
        }
        return false;
    }

    removeTask(id) {
        this.tasks[id].id = null;
        delete this.tasks[id];
        this.numTasks -= 1;
        this.emit("change");
    }

    completeTask(id) {
        this.tasks[id].success();
        this.emit("change");
    }

    cancelAllTasks() {
        if (this.numTasks > 0) {
            Object.keys(this.tasks).map((key) => {
                this.tasks[key].cancel();
            });
        }
    }

    _bindEventListeners(task) {
        task.on("success", () => {

        });

        task.on("fail", () => {

        });

        task.on("cancel", () => {

        });
    }
}

module.exports = new TaskManager();