/**
 * @author : Mario Juez (mario@mjuez.com)
 *
 * @license: GPL v3
 *     This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

'use strict';

const {MenuItem} = require('electron').remote;
const EventEmitter = require('events');

/**
 * Task.js
 */
class Task extends EventEmitter {

    constructor(name, details, gui) {
        super();
        this.taskManager = require('TaskManager');
        this.name = name;
        this.details = details;
        this.gui = gui;
        this.completed = false;
        this._createDOMElement();
    }

    run() {
        this.taskManager.addTask(this);
    }

    setId(id) {
        this.id = id;
    }

    _createDOMElement() {
        this.DOMElement = document.createElement('DIV');
        this.DOMElement.className = 'task';
        let taskInfo = document.createElement('DIV');
        taskInfo.className = 'info';
        taskInfo.innerHTML = `<strong>${this.name}</strong><br />${this.details}`;

        this.taskActions = document.createElement('DIV');
        this.taskActions.className = 'actions';
        let spinner = document.createElement('I');
        spinner.className = "fa fa-spinner fa-spin fa-2x fa-fw";
        this.taskActions.appendChild(spinner);

        this.DOMElement.appendChild(taskInfo);
        this.DOMElement.appendChild(this.taskActions);
    }

    showActions() {
        if (this.completed) {
            this.DOMElement.removeChild(this.taskActions);
            this.taskActions = this.DOMActions();
            this.DOMElement.appendChild(this.taskActions);
        }
    }

    DOMActions() {
        let actions = document.createElement('DIV');
        actions.className = 'actions';
        return actions;
    }

}

module.exports = Task;